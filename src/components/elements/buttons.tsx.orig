import { Box, Link } from "components/base";
import styled from "styled-components";

interface ArtButtonProps {
  borderWidth?: string;
  borderRadius?: string;
  padding?: string;
  btnColor?: string;
  onClick?: any;
  [index: string]: any;
}
export const ArtButton: React.FC<ArtButtonProps> = ({
  borderWidth = "3px",
  borderRadius = "100px",
  padding = "8px 24px",
  btnColor = "#302d38",
  onClick = () => { },
  children,
  ...props
}) => {
  return (
    <ArtButtonBase
      padding={borderWidth}
      borderRadius={borderRadius}
      onClick={onClick}
      btnColor={btnColor}
      {...props}
    >
      <Box
        width={"100%"}
        height={"100%"}
        borderRadius={borderRadius}
        padding={padding}
        whiteSpace={"nowrap"}
      >
        {children}
      </Box>
    </ArtButtonBase>
  );
};

const ArtButtonBase = styled(Box) <ArtButtonProps>`
  box-shadow: -5px -3px 10px 0px #fff2, 5px 3px 10px 0px #0006;
  cursor: pointer;
  & > div {
    background: ${(p) => `${p.btnColor}33`};
    box-shadow: 3px 3px 10px 0px ${(p) => `${p.btnColor}88`} inset,
      -6px -6px 10px 0px ${(p) => `${p.btnColor}88`} inset,
      -3px -3px 10px 0px ${(p) => `${p.btnColor}88`} inset;
  }
  &:hover {
    & > div {
      color: white;
      text-shadow: 0px 0px 20px #fff8;
    }
  }
  &:active {
    & > div {
      box-shadow: 10px 10px 10px 0px ${(p) => `${p.btnColor}22`} inset,
        5px 5px 10px 0px ${(p) => `${p.btnColor}22`} inset;
      text-shadow: none;
    }
  }
`;

export const NormalBtn = styled(Link)``;
NormalBtn.defaultProps = {
  alignItems: "center",
  gridGap: "4px",
  ml: "auto",
  padding: "6px 12px",
  background: "#302d38",
  border: "1px solid #34383b",
  borderRadius: "8px",
  cursor: "pointer",
  fontSize: "10px"
};

export const AddBtn = styled(Link)``;
AddBtn.defaultProps = {
  alignItems: "center",
  gridGap: "4px",
  ml: "auto",
  padding: "2px 6px",
  background: "#302d38",
  border: "1px solid #34383b",
  cursor: "pointer",
  fontSize: "14px"
};
<<<<<<< HEAD
=======

const SwipeBtnBase = styled(Box)`
  position: relative;
  padding: 12px;
  padding-left: 49px;
  padding-right: 20px;
  border-radius: 100px;
  overflow: hidden;
  &,
  & * {
    transition: 300ms ease-out;
  }
  &:before {
    content: "";
    position: absolute;
    top: 0px;
    left: 0px;
    background: #fff5;
    height: 100%;
    width: 40%;
    transform: translateX(-120%) skewX(30deg);
    transition: 500ms ease-in;
  }
  & > span {
    position: absolute;
    left: 0%;
    top: 0%;
    background: lime;
    height: 100%;
    aspect-ratio: 1;
    border-radius: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  &:hover {
    padding-right: 49px;
    padding-left: 20px;
    &:before {
      left: 100%;
      transform: translateX(120%) skewX(30deg);
    }
    & > span {
      left: 100%;
      top: 0%;
      transform: translateX(-100%);
    }
  }
  &:active {
    padding-right: 34px;
    padding-left: 35px;
    transition: 0ms;
    &:before {
      width: 100%;
      left: 0%;
      transform: translateX(0%);
      transition: 0ms;
    }
    & > span {
      left: 100%;
      top: 0%;
      transform: translateX(100%);
      transition: 0ms;
    }
  }
`;
>>>>>>> fd9a320 (click & drag)
